% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_spatial_subset.R
\name{get_spatial_subset}
\alias{get_spatial_subset}
\title{Get Spatial Subset of Data}
\usage{
get_spatial_subset(
  polygon,
  data,
  lat_col,
  lon_col,
  crs = 4326,
  verbose = FALSE
)
}
\arguments{
\item{polygon}{An \code{sf} object representing the polygon to use for filtering.}

\item{data}{A data frame containing spatial point data with latitude and longitude columns.}

\item{lat_col}{A character string specifying the name of the latitude column in the data frame.}

\item{lon_col}{A character string specifying the name of the longitude column in the data frame.}

\item{crs}{An integer specifying the Coordinate Reference System (CRS) for the input points (default is 4326).}

\item{verbose}{A logical value indicating whether to display messages about processing (default is \code{FALSE}).}
}
\value{
A filtered data frame containing only the points within the specified polygon.
}
\description{
Filters a data frame of spatial points to include only those within a specified polygon.
}
\details{
This function converts a data frame with latitude and longitude columns into an \code{sf} object, checks for CRS consistency
between the input polygon and the data, and performs a spatial filtering operation to retain only the points
that fall within the given polygon.

If the CRS of the input polygon does not match the CRS of the data, the polygon is transformed to match the data's CRS.
}
\examples{
\dontrun{
library(sf)

# Example polygon
polygon <- st_as_sf(data.frame(
  id = 1,
  geometry = st_sfc(st_polygon(list(matrix(c(
    -10, -10,
    10, -10,
    10, 10,
    -10, 10,
    -10, -10
  ), ncol = 2, byrow = TRUE))))
), crs = 4326)

# Example data frame
data <- data.frame(
  id = 1:5,
  lat = c(0, 5, -15, 20, -5),
  lon = c(0, 5, 15, -20, -5)
)

# Subset points within the polygon
filtered_data <- get_spatial_subset(polygon, data, lat_col = "lat", lon_col = "lon", verbose = TRUE)
print(filtered_data)
}

}
